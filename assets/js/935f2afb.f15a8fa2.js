"use strict";(self.webpackChunkreact_course_documentation=self.webpackChunkreact_course_documentation||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"reactSidebar":[{"type":"link","label":"Introducci\xf3n","href":"/react-course/","docId":"intro"},{"type":"link","label":"Instalaci\xf3n","href":"/react-course/installation","docId":"installation"},{"type":"link","label":"JavaScript XML (JSX)","href":"/react-course/jsx","docId":"jsx"},{"type":"link","label":"Componentes","href":"/react-course/components","docId":"components"},{"type":"link","label":"Propiedades","href":"/react-course/properties","docId":"properties"},{"type":"link","label":"Condicionales","href":"/react-course/conditionals","docId":"conditionals"},{"type":"link","label":"Listados","href":"/react-course/lists","docId":"lists"},{"type":"link","label":"Componentes de Orden Superior","href":"/react-course/hoc","docId":"hoc"},{"type":"link","label":"CSS","href":"/react-course/css","docId":"css"},{"type":"category","label":"Renderizado","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Estado","href":"/react-course/state","docId":"rendering/usestate"},{"type":"link","label":"Ciclo de vida","href":"/react-course/effect","docId":"rendering/useeffect"},{"type":"link","label":"Referencias","href":"/react-course/ref","docId":"rendering/useref"},{"type":"link","label":"Contexto","href":"/react-course/context","docId":"rendering/usecontext"},{"type":"link","label":"Estados complejos","href":"/react-course/reducer","docId":"rendering/usereducer"},{"type":"link","label":"Optimizaciones","href":"/react-course/optimization","docId":"rendering/optimization"}],"href":"/react-course/rendering"},{"type":"link","label":"Portales","href":"/react-course/portals","docId":"portals"},{"type":"link","label":"Limites de errores","href":"/react-course/errors","docId":"errors"},{"type":"link","label":"Testing","href":"/react-course/testing","docId":"testing"},{"type":"category","label":"Bibliotecas","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Redux","href":"/react-course/redux","docId":"libraries/redux"},{"type":"link","label":"React Hook Form","href":"/react-course/forms","docId":"libraries/forms"},{"type":"link","label":"React Router","href":"/react-course/router","docId":"libraries/router"}]}]},"docs":{"components":{"id":"components","title":"Componentes","description":"Los componentes permiten separar la interfaz de usuario en piezas independientes, reutilizables y peque\xf1as, pensar en cada pieza de forma aislada donde cada uno de ellos se haga cargo de su responsabilidad.","sidebar":"reactSidebar"},"conditionals":{"id":"conditionals","title":"Condicionales","description":"La representaci\xf3n condicional es un t\xe9rmino que describe la capacidad de renderizar diferentes elementos o componentes basados en una condici\xf3n. Este concepto se aplica a menudo en los siguientes escenarios:","sidebar":"reactSidebar"},"css":{"id":"css","title":"CSS","description":"Al utilizar React hay varias formas de usar CSS para dar estilo a los componentes.","sidebar":"reactSidebar"},"errors":{"id":"errors","title":"Limites de errores","description":"* L\xedmites de errores - React","sidebar":"reactSidebar"},"hoc":{"id":"hoc","title":"Componentes de Orden Superior","description":"Un componente de orden superior (HOC) es una t\xe9cnica avanzada para reutilizar la l\xf3gica en los componentes de React.","sidebar":"reactSidebar"},"installation":{"id":"installation","title":"Instalaci\xf3n","description":"Para empezar un nuevo proyecto basado en React existen multitud de herramientas que proporcionan todo lo necesario para el desarrollo.","sidebar":"reactSidebar"},"intro":{"id":"intro","title":"Introducci\xf3n","description":"React\xa0es una biblioteca\xa0JavaScript\xa0altamente eficiente y declarativa que se utiliza para crear interfaces de usuario interactivas.","sidebar":"reactSidebar"},"jsx":{"id":"jsx","title":"JavaScript XML (JSX)","description":"JSX (JavaScript XML) es un preprocesador que transforma el c\xf3digo a JavaScript.","sidebar":"reactSidebar"},"libraries/forms":{"id":"libraries/forms","title":"React Hook Form","description":"","sidebar":"reactSidebar"},"libraries/redux":{"id":"libraries/redux","title":"Redux","description":"","sidebar":"reactSidebar"},"libraries/router":{"id":"libraries/router","title":"React Router","description":"","sidebar":"reactSidebar"},"lists":{"id":"lists","title":"Listados","description":"Una colecci\xf3n de elementos o componentes, puede ser representada en\xa0JSX haciendo uso de la funci\xf3n\xa0map\xa0de\xa0JavaScript.","sidebar":"reactSidebar"},"portals":{"id":"portals","title":"Portales","description":"Todas las aplicaciones realizas con React suelen colgar siempre de un div que se encuentra en el HTML.","sidebar":"reactSidebar"},"properties":{"id":"properties","title":"Propiedades","description":"Las propiedades son valores que recibe un componente hijo desde uno padre. Se agrupan en un objeto llamado\xa0props, el cual puede recibir diferentes tipos de datos, como:","sidebar":"reactSidebar"},"rendering/optimization":{"id":"rendering/optimization","title":"Optimizaciones","description":"Cuando se habla de optimizaciones, es importante entender que hace referencia al comportamiento de los componentes de la aplicaci\xf3n, no acerca del algoritmo de reconciliaci\xf3n interno del React.","sidebar":"reactSidebar"},"rendering/rendering":{"id":"rendering/rendering","title":"Renderizado","description":"La renderizaci\xf3n (rendering) es un proceso interno del ciclo de vida de los componentes y es utilizada en varias etapas, generalmente cuando se inicializa un componente por primera vez.","sidebar":"reactSidebar"},"rendering/usecontext":{"id":"rendering/usecontext","title":"Contexto","description":"El uso de Context permite definir un contexto de datos al cual puede acceder todos aquellos componentes que se encuentren dentro de dicho contexto sin necesidad de utilizar las props.","sidebar":"reactSidebar"},"rendering/useeffect":{"id":"rendering/useeffect","title":"Ciclo de vida","description":"En React, cada componente pasa por diferentes fases durante su vida.","sidebar":"reactSidebar"},"rendering/usereducer":{"id":"rendering/usereducer","title":"Estados complejos","description":"useReducer es un hook alternativo al uso de useState, permite aislar toda la l\xf3gica de modificaci\xf3n del estado fuera de los componentes, se inspira en la librer\xeda Redux para proporcionar una manera de gestionar el estado por medio del uso de acciones.","sidebar":"reactSidebar"},"rendering/useref":{"id":"rendering/useref","title":"Referencias","description":"useRef es un hook que devuelve un objeto\xa0ref mutable cuya propiedad\xa0current se inicializa con el valor pasado como par\xe1metro.","sidebar":"reactSidebar"},"rendering/usestate":{"id":"rendering/usestate","title":"Estado","description":"El estado es el conjunto de valores que tiene la instancia de un componente mostrado en pantalla, es decir, contiene informaci\xf3n que puede cambiar durante la vida \xfatil del mismo.","sidebar":"reactSidebar"},"testing":{"id":"testing","title":"Testing","description":"|Dependencia|Uso|","sidebar":"reactSidebar"}}}')}}]);